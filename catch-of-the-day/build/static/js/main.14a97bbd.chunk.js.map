{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/login.js","base.js","components/Inventory.js","components/Fish.js","sample-fishes.js","components/App.js","components/NotFound.js","components/StorePicker.js","components/Router.js","index.js"],"names":["Header","props","react_default","a","createElement","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","Order","renderOrder","key","fish","_this","fishes","count","order","transitionOptions","classNames","timeout","enter","exit","status","react_transition_group","component","name","price","onClick","deleteFromOrder","_this2","this","orderIds","Object","keys","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","placeholder","type","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","login","Fish","_this$props$details","details","isAvailable","src","alt","disabled","addToOrder","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","loadSamplesFishes","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","StorePicker","myInput","goToStore","storeName","history","push","action","required","defaultValue","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.14a97bbd.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n    <header className=\"top\">\n        <h1>Catch\n            <span className=\"ofThe\">\n                <span className=\"of\">Of</span>\n                <span className=\"the\">The</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\nexport default Header;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        deleteFromOrder: PropTypes.func,\n    };\n\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout:{ enter: 250, exit: 250 }\n        }\n        // Make sure the fish is loaded before continuing\n        if(!fish) return null;\n        const isAvailable = fish.status === 'available';\n\n        if(!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {fish ? fish.name : 'fish' } is not longer available.\n                    </li>\n                </CSSTransition>\n            )\n        }\n\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition\n                                classNames=\"count\"\n                                key={count}\n                                timeout={{ enter:500, exit:500 }}\n                            >\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <button onClick={() => this.props.deleteFromOrder(key)}>&times;</button>\n                    </span>\n                </li>\n            </CSSTransition>\n        )\n    };\n\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if (isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total: <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Order;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes= {\n        addFish: PropTypes.func,\n    };\n\n    createFish = (event) => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        };\n\n        this.props.addFish(fish);\n        // Refresh the form\n        event.currentTarget.reset();\n    };\n\n    render () {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef} placeholder=\"Status\" >\n                    <option value=\"available\">Fresh</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        )\n    }\n\n}\n\nexport default AddFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func,\n    };\n    handleChange = (event) => {\n        // update that fish\n        // 1. Take a copy of the current fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value,\n        };\n        // 2.\n        this.props.updateFish(this.props.index, updatedFish);\n\n    };\n\n    render () {\n        return (\n            <div className=\"fish-edit\">\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.name}\n                />\n                <input\n                    type=\"text\"\n                    name=\"price\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.price}\n                />\n                <select\n                    name=\"status\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.status}\n                >\n                    <option value=\"available\">Fresh</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea\n                    name=\"desc\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.desc}\n                />\n                <input\n                    name=\"image\"\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.image}\n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>\n            </div>\n        )\n    }\n\n}\n\nexport default EditFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button\n            className=\"github\"\n            onClick={() => props.authenticate('Github')}\n        >\n            Log in With Github\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired,\n};\n\nexport default Login;","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCxfc3ZnNYHsI13xziQIsVxCVWv3sOI6z0\",\n    authDomain: \"catch-of-the-day-b1f53.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-b1f53.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport { firebaseApp };\n\n// Default export\nexport default base;","import React from \"react\";\nimport PropType from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\"\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./login.js\";\nimport base, {firebaseApp} from \"../base\";\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropType.object,\n        updateFish: PropType.func,\n        deleteFish: PropType.func,\n        loadSampleFishes: PropType.func,\n    };\n\n    state = {\n        uid: null,\n        owner: null,\n    };\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    authHandler = async (authData) => {\n        // 1. Look up the current store int the firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        // 2. Claim it if there is no owner\n        if (!store.owner) {\n            // save it as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        // 3. Set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid,\n        })\n    };\n\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    };\n\n    logout = async () => {\n        await firebase.auth().signOut();\n        this.setState({ uid:null });\n    };\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>\n\n        // 1. Check if user is logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate}/>\n        }\n        // 2. Check if user is the not the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner!</p>\n                    {logout}\n                </div>\n            )\n        }\n\n        // 3. They must be the owner, render the inventory\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFishForm\n                        key={key}\n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                    ))}\n                <AddFishForm addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}>\n                    Load Sample Fishes\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default Inventory;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        addToOrder: PropTypes.func\n    };\n    render() {\n        const {image, name, price, desc, status} = this.props.details;\n        const isAvailable = status === 'available';\n\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name}/>\n                <h3 className=\"fish-name\">{name}\n                <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n                    {isAvailable ? 'Add To Order' : 'Sold Out!'}\n                </button>\n            </li>\n        )\n    }\n}\n\nexport default Fish;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport Fish from \"./Fish\";\nimport sampleFishes from \"../sample-fishes\"\nimport base from \"../base\";\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {},\n    };\n\n    static propTypes = {\n        match: PropTypes.object,\n    };\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // Reinstate local storage\n        const localStorageRef = localStorage.getItem(params.storeId);\n\n        if(localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef)})\n        }\n\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: \"fishes\"\n        });\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = fish => {\n        // 1. Take copy of the existing fishes state object\n        const fishes = {...this.state.fishes};\n        // 2. Add our new fish to the fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. Set the new fishes object to state\n        this.setState({ fishes })\n    };\n\n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. Update that state\n        fishes[key] = updatedFish;\n        // 3. Set that to state\n        this.setState({ fishes });\n    };\n\n    deleteFish = (key) => {\n        // 1. Take a copy of state\n        const fishes = { ...this.state.fishes };\n        // 2. Update the state\n        fishes[key] = null;\n        // 3. Update state\n        this.setState({ fishes })\n    };\n\n    loadSamplesFishes = () => {\n        this.setState({ fishes: sampleFishes })\n    };\n\n    addToOrder = (key) => {\n        // 1. Take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in the order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n    deleteFromOrder = (key) => {\n        // 1. Take a copy of state\n        const order = { ...this.state.order };\n        // 2. Remove fish from order\n        delete order[key];\n        // 3. Update state\n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish\n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order\n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    deleteFromOrder={this.deleteFromOrder}\n                />\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSamplesFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!?!?!??!</h2>\n    </div>\n);\n\nexport default NotFound;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n    static propTypes = {\n        history: PropTypes.object,\n    };\n\n    myInput = React.createRef();\n\n    goToStore = event => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n        // 2. Get the text from the input\n        const storeName = this.myInput.current.value;\n        // 3. Change the page the /store/<input>\n        this.props.history.push(`/store/${storeName}`)\n    };\n\n    render() {\n        return (\n            <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input\n                    type=\"text\"\n                    ref={this.myInput}\n                    required placeholder=\"Store Name\"\n                    defaultValue={getFunName()}\n                />\n                <button type=\"submit\">Visit Store</button>\n            </form>\n        )\n    }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\nimport StorePicker from \"./StorePicker\";\n\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker}/>\n            <Route path=\"/store/:storeId\" component={App}/>\n            <Route component={NotFound}/>\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\n\nrender(<Router />, document.querySelector(\"#main\"));"],"sourceRoot":""}